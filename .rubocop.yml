AllCops:
  EnabledByDefault: true
  Exclude:
    - !ruby/regexp /\/db\/migrate/201[1-8].*\.rb\z/
    # auto-generated files; best to leave as-is
    - bin/{annotate,brakeman,bundle,database_consistency,pallets,rubocop,sidekiq}
    - db/schema.rb
    - lib/tasks/auto_annotate_models.rake
    - node_modules/**/*
  TargetRubyVersion: 2.7
Bundler/GemComment:
  Enabled: false
Layout/ArgumentAlignment:
  EnforcedStyle: with_fixed_indentation
Layout/ClassStructure:
  ExpectedOrder:
      - module_inclusion
      - constants
      - public_class_methods
      - initializer
      - public_methods
      - protected_methods
      - private_methods
Layout/DotPosition:
  EnforcedStyle: trailing
Layout/FirstArgumentIndentation:
  Enabled: false # this rule doesn't play nicely with the way that I like to use `memoize`
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent
Layout/LineLength:
  IgnoredPatterns:
    # ignore line length if the line is a comment without any spaces; it's probably not something we
    # can fix (e.g. a long file path)
    - !ruby/regexp /^ *#? [\S]+$/
  Max: 100
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented
Layout/SpaceBeforeBlockBraces:
  Enabled: false
Layout/SpaceBeforeSemicolon:
  Enabled: false
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: space
Lint/ConstantResolution:
  Enabled: false
Lint/RedundantSplatExpansion:
  Enabled: false
Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Metrics/MethodLength:
  Max: 30
Naming/RescuedExceptionsVariableName:
  Enabled: false
Style/BlockDelimiters:
  Enabled: false
Style/ClassAndModuleChildren:
  EnforcedStyle: compact
Style/CollectionMethods:
  Enabled: false
Style/ConstantVisibility:
  Enabled: false
Style/Copyright:
  Enabled: false
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Style/EmptyCaseCondition:
  Enabled: false
Style/FrozenStringLiteralComment:
  Enabled: true
Style/GlobalVars:
  Enabled: false
Style/GuardClause:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/InlineComment:
  Enabled: false
Style/Lambda:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  IgnoredMethods:
    - add_runtime_dependency
    - desc
    - fail
    - file
    - gem
    - head
    - include
    - integer
    - load
    - p
    - print
    - puts
    - render
    - require
    - require_relative
    - ruby
    - run
    - string
    - source
Style/MissingElse:
  Enabled: false
Style/NegatedIf:
  Enabled: false
Style/ImplicitRuntimeError:
  Enabled: false
Style/MethodCalledOnDoEndBlock:
  Enabled: false
Style/NumericPredicate:
  Enabled: false
Style/ParenthesesAroundCondition:
  Enabled: false
Style/RescueModifier:
  Enabled: false
Style/RescueStandardError:
  Enabled: false
Style/ReturnNil:
  Enabled: false
Style/RegexpLiteral:
  Enabled: false
Style/Semicolon:
  Enabled: false
Style/SignalException:
  Enabled: false
Style/StderrPuts:
  Enabled: false
Style/StringHashKeys:
  Enabled: false
Style/TernaryParentheses:
  Enabled: false
Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma
